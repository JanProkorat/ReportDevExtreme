#pragma checksum "C:\Users\proko\Documents\Gitlab tul\bakalarskaprace\ReportDevExpress\ReportDevExpress\Views\Home\RegulationView.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b7c86d79eae8d2855daf1003914326cf25b2687d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_RegulationView), @"mvc.1.0.view", @"/Views/Home/RegulationView.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/RegulationView.cshtml", typeof(AspNetCore.Views_Home_RegulationView))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\proko\Documents\Gitlab tul\bakalarskaprace\ReportDevExpress\ReportDevExpress\Views\_ViewImports.cshtml"
using ReportDevExpress;

#line default
#line hidden
#line 3 "C:\Users\proko\Documents\Gitlab tul\bakalarskaprace\ReportDevExpress\ReportDevExpress\Views\_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b7c86d79eae8d2855daf1003914326cf25b2687d", @"/Views/Home/RegulationView.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b3f17d97a7c743589eae9bc5a46be2e1f91afb92", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_RegulationView : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\proko\Documents\Gitlab tul\bakalarskaprace\ReportDevExpress\ReportDevExpress\Views\Home\RegulationView.cshtml"
  
	ViewData["Title"] = "RegulationView";
	Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#line 6 "C:\Users\proko\Documents\Gitlab tul\bakalarskaprace\ReportDevExpress\ReportDevExpress\Views\Home\RegulationView.cshtml"
 if(Model != null)
{

#line default
#line hidden
            BeginContext(116, 45, true);
            WriteLiteral("\t\t<h2 id=\"nadpis\">\r\n\t\tZobrazovane obdobi: od ");
            EndContext();
            BeginContext(162, 26, false);
#line 9 "C:\Users\proko\Documents\Gitlab tul\bakalarskaprace\ReportDevExpress\ReportDevExpress\Views\Home\RegulationView.cshtml"
                          Write(Model.MonitoredPeriodStart);

#line default
#line hidden
            EndContext();
            BeginContext(188, 4, true);
            WriteLiteral(" do ");
            EndContext();
            BeginContext(193, 24, false);
#line 9 "C:\Users\proko\Documents\Gitlab tul\bakalarskaprace\ReportDevExpress\ReportDevExpress\Views\Home\RegulationView.cshtml"
                                                         Write(Model.MonitoredPeriodEnd);

#line default
#line hidden
            EndContext();
            BeginContext(217, 3, true);
            WriteLiteral(" - ");
            EndContext();
            BeginContext(221, 26, false);
#line 9 "C:\Users\proko\Documents\Gitlab tul\bakalarskaprace\ReportDevExpress\ReportDevExpress\Views\Home\RegulationView.cshtml"
                                                                                     Write(Model.MonitoredPeriod.Days);

#line default
#line hidden
            EndContext();
            BeginContext(247, 9, true);
            WriteLiteral(" dni,\r\n\t\t");
            EndContext();
            BeginContext(257, 27, false);
#line 10 "C:\Users\proko\Documents\Gitlab tul\bakalarskaprace\ReportDevExpress\ReportDevExpress\Views\Home\RegulationView.cshtml"
   Write(Model.MonitoredPeriod.Hours);

#line default
#line hidden
            EndContext();
            BeginContext(284, 6, true);
            WriteLiteral(" hod, ");
            EndContext();
            BeginContext(291, 29, false);
#line 10 "C:\Users\proko\Documents\Gitlab tul\bakalarskaprace\ReportDevExpress\ReportDevExpress\Views\Home\RegulationView.cshtml"
                                     Write(Model.MonitoredPeriod.Minutes);

#line default
#line hidden
            EndContext();
            BeginContext(320, 90, true);
            WriteLiteral(" min\r\n\t</h2>\r\n\t<section class=\"section\" id=\"deviationSection\">\r\n\t\t<div class=\"graph\">\r\n\t\t\t");
            EndContext();
            BeginContext(412, 1720, false);
#line 14 "C:\Users\proko\Documents\Gitlab tul\bakalarskaprace\ReportDevExpress\ReportDevExpress\Views\Home\RegulationView.cshtml"
        Write(Html.DevExtreme().Chart()
				.ID("deviationChart")
				.Palette(VizPalette.HarmonyLight)
				.CommonSeriesSettings(s => s
					.ArgumentField("Date")

				)
				.DataSource(d => d
					.StaticJson()
					.Url(Url.Action("GetRegulatoryDeviationData"))
				)
				.Series(s =>
				{
					s.Add().Name("Ocekavany jalovy vykon").ValueField("ExpectedValue").Type(SeriesType.Line);
					s.Add().Name("Regulacni odchylka od jaloveho vykonu").ValueField("DeviationValue").Type(SeriesType.Bar);
				})

				.ValueAxis(a =>
				{
					a.Add().Name("ExpectedValue");
					a.Add().Name("DeviationValue");
				})
				.ArgumentAxis(a => a
					.ArgumentType(ChartDataType.DateTime)
					.Label(l => l
						.OverlappingBehavior(OverlappingBehavior.Stagger)
					)
				)
				.Title(t => t
					.Text("Graf regulacni odchylky od jaloveho vykonu")
					.Subtitle(s => s.Text("v Kvar"))
				)
				.Size(s => s.Height(420))
				.LoadingIndicator(l => l.Show(true))
				.Export(e => e.Enabled(true))
				.Tooltip(t => t
					.Enabled(true)
					.Shared(true)
					.CustomizeTooltip(
							item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    BeginContext(1528, 468, true);
    WriteLiteral(@"
								function(info) {
								return {
								html: ""<div><div class='tooltip-header'>"" +
										info.argumentText + ""</div>"" +
										""<div class='tooltip-body'><div class='series-name'>"" +
											info.points[0].seriesName + "": "" + info.points[0].valueText +
											""</div><div class='series-name'>"" +
											info.points[1].seriesName + "": "" + info.points[1].valueText +
											""</div></div></div>""
									};
								}
							");
    EndContext();
    PopWriter();
}
))
				 )
				 .Legend(l => l
					 .VerticalAlignment(VerticalEdge.Top)
					 .HorizontalAlignment(HorizontalAlignment.Center)
				 )
			);

#line default
#line hidden
            EndContext();
            BeginContext(2147, 7, true);
            WriteLiteral("\r\n\r\n\t\t\t");
            EndContext();
            BeginContext(2156, 813, false);
#line 73 "C:\Users\proko\Documents\Gitlab tul\bakalarskaprace\ReportDevExpress\ReportDevExpress\Views\Home\RegulationView.cshtml"
        Write(Html.DevExtreme().RangeSelector()
				.Size(s => s.Height(150))
				.Scale(s => s
					.MinorTickInterval(VizTimeInterval.Hour)
					.TickInterval(i => i.Hours(4))
					.ValueType(ChartDataType.DateTime)
				)
				.Chart(c => c
					.Series(s =>
					{
						s.Add().ArgumentField("Date").ValueField("ExpectedValue");
						s.Add().ArgumentField("Date").ValueField("DeviationValue");
					})
					.Palette(VizPalette.HarmonyLight)
				)
				.Behavior(b => b.CallValueChanged(ValueChangedCallMode.OnMoving))
				.OnValueChanged(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    BeginContext(2706, 160, true);
    WriteLiteral("\r\n\t\t\t\t\tfunction(e) {\r\n\t\t\t\t\t\tvar zoomedChart = $(\"#deviationChart\").dxChart(\"instance\");\r\n\t\t\t\t\t\tzoomedChart.getArgumentAxis().visualRange(e.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t");
    EndContext();
    PopWriter();
}
))
				.DataSource(d => d
					.StaticJson()
					.Url(Url.Action("GetRegulatoryDeviationData"))
				)
			);

#line default
#line hidden
            EndContext();
            BeginContext(2984, 55, true);
            WriteLiteral("\r\n\t\t</div>\r\n\t\t<div class=\"graph\" id=\"avgGraphDiv\">\r\n\t\t\t");
            EndContext();
            BeginContext(3041, 2418, false);
#line 102 "C:\Users\proko\Documents\Gitlab tul\bakalarskaprace\ReportDevExpress\ReportDevExpress\Views\Home\RegulationView.cshtml"
        Write(Html.DevExtreme().Chart()
					.ID("deviationAvgChart")
					.Palette(VizPalette.HarmonyLight)
					.CommonSeriesSettings(s => s
						.ArgumentField("Date")

					)
					.DataSource(d => d
						.StaticJson()
						.Url(Url.Action("GetRegulatoryDeviationData"))
					)
					.Series(s =>
					{
						s.Add().Name("Prumerna hodnota za 10 minut").ValueField("avgValue10M").Type(SeriesType.Bar);
						s.Add().Name("Prumerna hodnota za 30 minut").ValueField("avgValue30M").Type(SeriesType.Bar);
						s.Add().Name("Prumerna hodnota za hodinu").ValueField("avgValue1H").Type(SeriesType.Bar);
						s.Add().Name("Prumerna hodnota za 6 hodin").ValueField("avgValue6H").Type(SeriesType.Bar);
						s.Add().Name("Prumerna hodnota za den").ValueField("avgValue1D").Type(SeriesType.Bar);
					})

					.ValueAxis(a =>
					{
						a.Add().Name("ExpectedValue");
						a.Add().Name("DeviationValue");
					})
					.ArgumentAxis(a => a
						.ArgumentType(ChartDataType.DateTime)
						.Label(l => l
							.OverlappingBehavior(OverlappingBehavior.Stagger)
						)
					)
					.Title(t => t
						.Text("Graf zprumerovane regulacni odchylky")
						.Subtitle(s => s.Text("v Kvar"))
					)
					.Size(s => s.Height(420))
					.LoadingIndicator(l => l.Show(true))
					.Export(e => e.Enabled(true))
					.Tooltip(t => t
						.Enabled(true)
						.Shared(true)
						.CustomizeTooltip(
								item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    BeginContext(4471, 847, true);
    WriteLiteral(@"
									function(info) {
									return {
									html: ""<div><div class='tooltip-header'>"" +
											info.argumentText + ""</div>"" +
										  ""<div class='tooltip-body'><div class='series-name'>"" +
											info.points[0].seriesName + "": "" + info.points[0].valueText +
										  ""</div><div class='series-name'>"" +
											info.points[1].seriesName + "": "" + info.points[1].valueText +
										  ""</div><div class='series-name'>"" +
											info.points[2].seriesName + "": "" + info.points[2].valueText +
										  ""</div><div class='series-name'>"" +
											info.points[3].seriesName + "": "" + info.points[3].valueText +
										  ""</div><div class='series-name'>"" +
											info.points[4].seriesName + "": "" + info.points[4].valueText +
										  ""</div></div></div>""
									};
									}
								");
    EndContext();
    PopWriter();
}
))
					 )
					 .Legend(l => l
						 .VerticalAlignment(VerticalEdge.Top)
						 .HorizontalAlignment(HorizontalAlignment.Center)
					 )
			);

#line default
#line hidden
            EndContext();
            BeginContext(5474, 5, true);
            WriteLiteral("\r\n\t\t\t");
            EndContext();
            BeginContext(5481, 1000, false);
#line 169 "C:\Users\proko\Documents\Gitlab tul\bakalarskaprace\ReportDevExpress\ReportDevExpress\Views\Home\RegulationView.cshtml"
        Write(Html.DevExtreme().RangeSelector()
				.Size(s => s.Height(150))
				.Scale(s => s
					.MinorTickInterval(VizTimeInterval.Hour)
					.TickInterval(i => i.Hours(4))
					.ValueType(ChartDataType.DateTime)
				)
				.Chart(c => c
					.Series(s =>
					{
						s.Add().ValueField("avgValue10M").ArgumentField("Date");
						s.Add().ValueField("avgValue30M").ArgumentField("Date");
						s.Add().ValueField("avgValue1H").ArgumentField("Date");
						s.Add().ValueField("avgValue6H").ArgumentField("Date");
						s.Add().ValueField("avgValue1D").ArgumentField("Date");
					})
					.Palette(VizPalette.HarmonyLight)
				)
				.Behavior(b => b.CallValueChanged(ValueChangedCallMode.OnMoving))
				.OnValueChanged(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    BeginContext(6215, 163, true);
    WriteLiteral("\r\n\t\t\t\t\tfunction(e) {\r\n\t\t\t\t\t\tvar zoomedChart = $(\"#deviationAvgChart\").dxChart(\"instance\");\r\n\t\t\t\t\t\tzoomedChart.getArgumentAxis().visualRange(e.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t");
    EndContext();
    PopWriter();
}
))
				.DataSource(d => d
					.StaticJson()
					.Url(Url.Action("GetRegulatoryDeviationData"))
				)
			);

#line default
#line hidden
            EndContext();
            BeginContext(6496, 58, true);
            WriteLiteral("\r\n\t\t</div>\r\n\r\n\t\t<div class=\"info\" id=\"deviationInfo\">\r\n\t\t\t");
            EndContext();
            BeginContext(6556, 847, false);
#line 202 "C:\Users\proko\Documents\Gitlab tul\bakalarskaprace\ReportDevExpress\ReportDevExpress\Views\Home\RegulationView.cshtml"
        Write(Html.DevExtreme().DataGrid()
				.ID("deviationContainer")
				.ShowBorders(true)
				.Selection(s => s.Mode(SelectionMode.Multiple))
				.HoverStateEnabled(true)
				.Export(e => e.Enabled(true).FileName("RegOdchylka-Info").AllowExportSelectedData(true))
				.GroupPanel(g => g.Visible(true))
				.Grouping(g => g.AutoExpandAll(false))
				.Paging(p => p.PageSize(10))
				.AllowColumnReordering(true)
				.AllowColumnResizing(true)
				.ColumnAutoWidth(true)
				.ShowBorders(true)
				.ColumnFixing(c => c.Enabled(true))
				.RepaintChangesOnly(true)
				.DataSource(d => d
					.StaticJson()
					.Url(Url.Action("GetRegulatorDeviationInfo"))
				)
				.SearchPanel(s => s
					.Visible(true)
					.HighlightCaseSensitive(true)
				)
				.GroupPanel(g => g.Visible(true))
				.Grouping(g => g.AutoExpandAll(false))
			);

#line default
#line hidden
            EndContext();
            BeginContext(7404, 315, true);
            WriteLiteral(@"
		</div>
	</section>
	<script type=""text/javascript"">
		$(function () {
			$(""#deviationChart"").dxChart({
				onLegendClick: function (e) {
					var series = e.target;
					if (series.isVisible()) {
						series.hide();
					} else {
						series.show();
					}
				}
			});
		});

	
	</script>
");
            EndContext();
#line 246 "C:\Users\proko\Documents\Gitlab tul\bakalarskaprace\ReportDevExpress\ReportDevExpress\Views\Home\RegulationView.cshtml"
}

#line default
#line hidden
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
